import esbuild from "esbuild";
import process from "process";
import builtins from 'builtin-modules';
import { copy } from "esbuild-plugin-copy";

const banner =
`/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/
`;

const prod = (process.argv[2] === 'production');

const baseConfig = {
	banner: {
		js: banner,
	},
	entryPoints: ['main.ts'],
	bundle: true,
	external: [
		'obsidian',
		'electron',
		'@codemirror/autocomplete',
		'@codemirror/closebrackets',
		'@codemirror/collab',
		'@codemirror/commands',
		'@codemirror/comment',
		'@codemirror/fold',
		'@codemirror/gutter',
		'@codemirror/highlight',
		'@codemirror/history',
		'@codemirror/language',
		'@codemirror/lint',
		'@codemirror/matchbrackets',
		'@codemirror/panel',
		'@codemirror/rangeset',
		'@codemirror/rectangular-selection',
		'@codemirror/search',
		'@codemirror/state',
		'@codemirror/stream-parser',
		'@codemirror/text',
		'@codemirror/tooltip',
		'@codemirror/view',
		...builtins],
	format: 'cjs',
	watch: !prod,
	target: 'es2016',
	logLevel: "info",
	sourcemap: prod ? false : 'inline',
	treeShaking: true,
};

const testVaultPluginFolder = 'test-vault/.obsidian/plugins/obsidian-sample-plugin/';
const devConfig = {
	...baseConfig,
	outfile: testVaultPluginFolder + 'main.js',
	plugins: [
		copy({
			resolveFrom: testVaultPluginFolder,
			assets: [
				{ from: ['manifest.json', 'styles.css'], to: ['.'] }
			]
		})
	]
};

const prodConfig = {
	...baseConfig,
	outfile: 'main.js',
};

if (prod){
	esbuild.build(prodConfig).catch(() => process.exit(1));
} else {
	esbuild.build(devConfig).catch(() => process.exit(1));
}
